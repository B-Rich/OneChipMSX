
	; One Chip MSX IPL-ROM
	; Disassembly & Comments By : NYYRIKKI

	ORG	0F000H

XF000:	DI
	JR	START


	; Load data
	; HL = Load address
	; B  = Number of sectors
	; CDE= Sector number (auto increase)

LOAD:	JP	SECLOAD
LOADADR:	EQU	$-2

	; Move code to RAM

START:	LD	BC,0200H
	LD	DE,XF000
	LD	HL,0000H
	LDIR

	; Init Palette
	LD	HL,VDPDATA
	LD	BC,0299H
	OTIR
	LD	BC,209AH
	OTIR
	JP	XF043
VDPDATA:
	DEFB #00,#90
	DEFB #00,#00,#00,#00,#11,#06,#33,#07,#17,#01,#27,#03,#51,#01,#27,#06
	DEFB #71,#01,#73,#03,#61,#06,#64,#06,#11,#04,#65,#02,#55,#05,#77,#07

XF043:	LD	SP,0FFFFH
	LD	A,40H
	LD	(6000H),A
	LD	BC,0100H
	LD	DE,0000H
	LD	HL,0C000H
	CALL	LOAD
	JR	C,XF07B
	CALL	CHKFAT
	JR	C,XF071
	CALL	CHKMBR
	JR	C,XF07B
	PUSH	DE
	PUSH	BC
	LD	B,01H
	LD	HL,0C000H
	CALL	LOAD
	POP	BC
	POP	DE
	JR	C,XF08D	; Bug? Should be XF07B?
XF071:	CALL	FINDROMFILE
	JR	C,XF07B
	CALL	COPYROMS
	JR	XF08D

XF07B:	LD	HL,ROMLOAD
	LD	(LOADADR),HL
	LD	A,60H
	LD	(6000H),A
	LD	DE,0200H
	LD	C,E
	CALL	COPYROMS
XF08D:	XOR	A
	LD	(6000H),A
	INC	A
	LD	(6800H),A
	LD	(7000H),A
	LD	(7800H),A
	LD	A,0C0H
	OUT	(0A8H),A
	RST	00H

COPYROMS:
	LD	B,10H ; Number of 16KB ROMs
	LD	A,80H
XF0A4:	LD	(7000H),A
	INC	A
	LD	(7800H),A
	INC	A
	PUSH	AF
	PUSH	BC
	LD	B,20H
	LD	HL,8000H
	CALL	LOAD
	POP	BC
	POP	HL
	RET	C
	LD	A,H
	DJNZ	XF0A4
	RET

ROMLOAD:
	PUSH	DE
	PUSH	BC
	SLA	E
	RL	D
	LD	A,B
	ADD	A,A
	LD	C,A
	LD	B,00H
	PUSH	HL
	LD	HL,4000H
	LD	(HL),03H
	LD	(HL),D
	LD	(HL),E
	LD	(HL),B
	LD	A,(HL)
	POP	DE
XF0D3:	LD	A,(HL)
	LD	(DE),A
	INC	DE
	DJNZ	XF0D3
	DEC	C
	JR	NZ,XF0D3
	LD	A,(5000H)
	POP	BC
	POP	HL
	XOR	A
	LD	D,A
	LD	E,B
	ADD	HL,DE
	EX	DE,HL
	ADC	A,C
	LD	C,A
	RET

	; Sector load & subroutines

SNDCMD:	LD	A,(HL)
	SLA	E
	RL	D
	RL	C
	LD	(HL),B
	LD	(HL),C
	LD	(HL),D
	LD	(HL),E
	LD	(HL),00H
	LD	(HL),95H
	LD	A,(HL)
	LD	B,10H
XF0FA:	LD	A,(HL)
	CP	0FFH
	CCF
	RET	NC
	DJNZ	XF0FA
	SCF
	RET

XF103:	LD	B,0AH
XF105:	LD	A,(5000H)
	DJNZ	XF105
	LD	BC,4000H
	LD	E,C
	LD	D,C
	CALL	SNDCMD
	RET	C
	AND	0F7H
	CP	01H
	SCF
	RET	NZ
XF119:	LD	B,77H
	CALL	SNDCMD
	AND	04H
	JR	Z,XF129
	LD	B,41H
	CALL	SNDCMD
	JR	XF12E
XF129:	LD	B,69H
	CALL	SNDCMD
XF12E:	RET	C
	CP	01H
	JR	Z,XF119
	OR	A
	RET	Z
	SCF
	RET

XF137:	CALL	XF103
	POP	BC
	POP	DE
	POP	HL
	RET	C

SECLOAD:	
	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	B,51H
	LD	HL,4000H
	CALL	SNDCMD
	JR	C,XF137
	POP	BC
	POP	DE
	POP	HL
	OR	A
	SCF
	RET	NZ
	PUSH	DE
	PUSH	BC
	EX	DE,HL
	LD	BC,0200H
	LD	HL,4000H
XF15A:	LD	A,(HL)
	CP	0FEH
	JR	NZ,XF15A
	LDIR
	EX	DE,HL
	LD	A,(DE)
	POP	BC
	LD	A,(DE)
	POP	DE
	INC	DE
	LD	A,D
	OR	E
	JR	NZ,XF16C
	INC	C
XF16C:	DJNZ	SECLOAD
	RET

	; Search for "FAT"
	; C = Found

CHKFAT:	LD	HL,0C000H
	LD	BC,0080H
XF175:	LD	A,46H  ; F
	CPIR
	JR	Z,XF17D
	OR	A
	RET
XF17D:	PUSH	HL
	LD	D,(HL)
	INC	HL
	LD	E,(HL)
	LD	HL,4154H ; AT
	OR	A
	SBC	HL,DE
	POP	HL
	JR	NZ,XF175
	LD	C,00H
	LD	E,C
	LD	D,C
	SCF
	RET

	; Search Partition
	; C = Not Found

CHKMBR:	LD	B,04H
	LD	HL,0C1C6H
XF195:	PUSH	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	LD	A,C
	OR	D
	OR	E
	POP	HL
	RET	NZ
	LD	DE,0010H
	ADD	HL,DE
	DJNZ	XF195
	SCF
	RET

FINDROMFILE:
	LD	IX,0C000H
	LD	L,(IX+0EH)	; Reserved sectors
	LD	H,(IX+0FH)
	LD	A,C
	ADD	HL,DE
	ADC	A,00H
	LD	C,A
	LD	E,(IX+11H) ; Root entries
	LD	D,(IX+12H)
	LD	A,E
	AND	0FH
	LD	B,04H
XF1C2:	SRL	D
	RR	E
	DJNZ	XF1C2
	OR	A
	JR	Z,XF1CC
	INC	DE
XF1CC:	PUSH	DE
	LD	B,(IX+10H) ; Number of FATs
	LD	E,(IX+16H) ; Sectors / FAT
	LD	D,(IX+17H)
	LD	A,C
XF1D7:	ADD	HL,DE
	ADC	A,00H
	DJNZ	XF1D7
	POP	DE
	ADD	HL,DE
	EX	DE,HL
	LD	C,A
	PUSH	DE
	PUSH	BC
	LD	B,01H
	LD	HL,0C000H
	CALL	LOAD
	RET	C
	LD	HL,(0C000H)
	LD	DE,4241H	; ROM header
	OR	A
	SBC	HL,DE
	POP	BC
	POP	DE
	RET	Z
	SCF
	RET

	DEFB 0,0,0,0,0,0,0

	END
